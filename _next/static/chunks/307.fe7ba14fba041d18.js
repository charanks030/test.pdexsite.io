"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[307],{2307:function(e,n,t){t.r(n),t.d(n,{isWeb3Injected:function(){return y},packageInfo:function(){return u},unwrapBytes:function(){return m},web3Accounts:function(){return A},web3AccountsSubscribe:function(){return Y},web3Enable:function(){return P},web3EnablePromise:function(){return E},web3FromAddress:function(){return O},web3FromSource:function(){return F},web3ListRpcProviders:function(){return S},web3UseRpcProvider:function(){return U},wrapBytes:function(){return p}});var r=t(6169);let o=function(...e){return n=>!!n&&"object"==typeof n&&e.every(e=>(0,r.m)(n[e]))}("catch","then");var i=t(9155);function s(e,n){let t=(0,i.Y)(e),r=(0,i.Y)(n);if(t.length===r.length){let e=new DataView(t.buffer,t.byteOffset),n=new DataView(r.buffer,r.byteOffset),o=t.length%4|0,i=t.length-o|0;for(let t=0;t<i;t+=4)if(e.getUint32(t)!==n.getUint32(t))return!1;for(let e=i;e<t.length;e++)if(t[e]!==r[e])return!1;return!0}return!1}var a=t(9495),c=t(9048);let u={name:"@polkadot/extension-dapp",path:new URL("file:///home/business-website/polkadex-business-website/node_modules/@polkadot/extension-dapp/packageInfo.js").pathname.substring(0,new URL("file:///home/business-website/polkadex-business-website/node_modules/@polkadot/extension-dapp/packageInfo.js").pathname.lastIndexOf("/")+1),type:"esm",version:"0.45.5"};var l=t(3836);let f=(0,i.Y)("\x19Ethereum Signed Message:\n"),b=(0,i.Y)("<Bytes>"),d=(0,i.Y)("</Bytes>"),h=b.length+d.length;function w(e,n){return e.length>=h&&s(e.subarray(0,b.length),b)&&s(e.slice(-d.length),d)||n&&e.length>=f.length&&s(e.subarray(0,f.length),f)}let m=function(e){let n=(0,i.Y)(e);return w(n,!1)?n.subarray(b.length,n.length-d.length):n},p=function(e){let n=(0,i.Y)(e);return w(n,!0)?n:(0,l.d)([b,n,d])},g=window;g.injectedWeb3=g.injectedWeb3||{};let y=v(),E=null;function v(){return 0!==Object.values(g.injectedWeb3).filter(({connect:e,enable:n})=>!!(e||n)).length}function j(e){throw Error(`${e}: web3Enable(originName) needs to be called before ${e}`)}function $(e,n,t){return n.map(({address:n,genesisHash:r,name:o,type:i})=>({address:42===n.length?n:(0,a.m)((0,c.m)(n),t),meta:{genesisHash:r,name:o,source:e},type:i}))}function k(e,n,t){return e.filter(e=>(!e.type||!t||t.includes(e.type))&&(!e.genesisHash||!n||e.genesisHash===n))}async function x(e,n){return E?(await E).filter(({name:e})=>!n||n.includes(e)):j(e)}function P(e,n=[]){var t;if(!e)throw Error("You must pass a name for your app to the web3Enable function");let r=n.length?Promise.all(n.map(e=>e().catch(()=>!1))):Promise.resolve([!0]);return t=()=>r.then(()=>Promise.all(Object.entries(g.injectedWeb3).map(([n,{connect:t,enable:r,version:o}])=>Promise.resolve().then(()=>t?t(e):r?r(e).then(e=>(function(e,...n){for(let t=0;t<n.length;t++){let r=n[t];if(r){if("function"==typeof r.entries)for(let[n,t]of r.entries())e[n]=t;else Object.assign(e,r)}}return e})({name:n,version:o||"unknown"},e)):Promise.reject(Error("No connect(..) or enable(...) hook found"))).catch(({message:e})=>{console.error(`Error initializing ${n}: ${e}`)}))).then(e=>e.filter(e=>!!e)).then(e=>e.map(e=>(e.accounts.subscribe||(e.accounts.subscribe=n=>(e.accounts.get().then(n).catch(console.error),()=>{})),e))).catch(()=>[]).then(e=>{let n=e.map(({name:e,version:n})=>`${e}/${n}`);return y=v(),console.info(`web3Enable: Enabled ${e.length} extension${1!==e.length?"s":""}: ${n.join(", ")}`),e})),E=new Promise(e=>{"complete"===document.readyState?e(t()):window.addEventListener("load",()=>e(t()))})}async function A({accountType:e,extensions:n,genesisHash:t,ss58Format:r}={}){let o=[],i=await x("web3Accounts",n);return(await Promise.all(i.map(async({accounts:n,name:o})=>{try{let i=await n.get();return $(o,k(i,t,e),r)}catch{return[]}}))).forEach(e=>{o.push(...e)}),console.info(`web3Accounts: Found ${o.length} address${1!==o.length?"es":""}`),o}async function Y(e,{accountType:n,extensions:t,genesisHash:r,ss58Format:i}={}){let s=await x("web3AccountsSubscribe",t),a={},c=()=>e(Object.entries(a).reduce((e,[t,o])=>(e.push(...$(t,k(o,r,n),i)),e),[])),u=s.map(({accounts:{subscribe:e},name:n})=>e(e=>{a[n]=e;try{let e=c();e&&o(e)&&e.catch(console.error)}catch(e){console.error(e)}}));return()=>{u.forEach(e=>{e()})}}async function F(e){if(!E)return j("web3FromSource");let n=await E,t=e&&n.find(({name:n})=>n===e);if(!t)throw Error(`web3FromSource: Unable to find an injected ${e}`);return t}async function O(e){let n;if(!E)return j("web3FromAddress");let t=await A();if(e){let r=(0,c.m)(e);n=t.find(e=>s((0,c.m)(e.address),r))}if(!n)throw Error(`web3FromAddress: Unable to find injected ${e}`);return F(n.meta.source)}async function S(e){let{provider:n}=await F(e);return n?n.listProviders():(console.warn(`Extension ${e} does not expose any provider`),null)}async function U(e,n){let{provider:t}=await F(e);if(!t)throw Error(`Extension ${e} does not expose any provider`);return{meta:await t.startProvider(n),provider:t}}}}]);